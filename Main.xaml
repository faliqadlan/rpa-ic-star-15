<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:uasf="clr-namespace:UiPath.Activities.System.FileOperations;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="access_token_arg" Type="InOutArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="profile_token_arg" Type="InOutArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="biodata_report_url_arg" Type="OutArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="assignment_report_url_arg" Type="OutArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Microsoft.Win32.SafeHandles</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Configuration.Assemblies</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.CodeDom.Compiler</x:String>
      <x:String>System.Buffers</x:String>
      <x:String>System.Buffers.Text</x:String>
      <x:String>System.Buffers.Binary</x:String>
      <x:String>System.Threading</x:String>
      <x:String>System.Threading.Tasks</x:String>
      <x:String>System.Threading.Tasks.Sources</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.Unicode</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.Security.Permissions</x:String>
      <x:String>System.Security.Cryptography</x:String>
      <x:String>System.Runtime</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.Remoting</x:String>
      <x:String>System.Runtime.ExceptionServices</x:String>
      <x:String>System.Runtime.ConstrainedExecution</x:String>
      <x:String>System.Runtime.Versioning</x:String>
      <x:String>System.Runtime.Loader</x:String>
      <x:String>System.Runtime.Intrinsics</x:String>
      <x:String>System.Runtime.Intrinsics.Wasm</x:String>
      <x:String>System.Runtime.Intrinsics.Arm</x:String>
      <x:String>System.Runtime.Intrinsics.X86</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.InteropServices.ObjectiveC</x:String>
      <x:String>System.Runtime.InteropServices.Marshalling</x:String>
      <x:String>System.Runtime.InteropServices.ComTypes</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Resources</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Reflection.Metadata</x:String>
      <x:String>System.Reflection.Emit</x:String>
      <x:String>System.IO.Enumeration</x:String>
      <x:String>System.Diagnostics.SymbolStore</x:String>
      <x:String>System.Diagnostics.Contracts</x:String>
      <x:String>System.Diagnostics.CodeAnalysis</x:String>
      <x:String>System.Diagnostics.Tracing</x:String>
      <x:String>System.Collections.Concurrent</x:String>
      <x:String>Internal</x:String>
      <x:String>System.CodeDom</x:String>
      <x:String>Microsoft.CSharp</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Linq.Expressions.Interpreter</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>UiPath.Workflow.Runtime</x:String>
      <x:String>System.Activities.Tracking</x:String>
      <x:String>System.Activities.Statements.Tracking</x:String>
      <x:String>System.Activities.Runtime</x:String>
      <x:String>System.Activities.Runtime.DurableInstancing</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.ParallelTracking</x:String>
      <x:String>System.Activities.Hosting</x:String>
      <x:String>System.Activities.Persistence</x:String>
      <x:String>System.Activities.DurableInstancing</x:String>
      <x:String>System.ComponentModel.Design.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.FileIO</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.Activities.System.FileOperations</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.IO.Pipes</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography</AssemblyReference>
      <AssemblyReference>System.Security.Principal.Windows</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.IO.MemoryMappedFiles</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Registry</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Threading.AccessControl</AssemblyReference>
      <AssemblyReference>System.Threading</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Parallel</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Text.Encodings.Web</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Security.Claims</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.Pkcs</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.ProtectedData</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Resources.Writer</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.PerformanceCounter</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TextWriterTraceListener</AssemblyReference>
      <AssemblyReference>System.Diagnostics.StackTrace</AssemblyReference>
      <AssemblyReference>System.Collections.Concurrent</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="833.6000000000001,1636" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="upr:ILocalResource" Name="downloadedFile" />
      <Variable x:TypeArguments="upr:ILocalResource" Name="Result" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="' Step 1: Get the access token&#xD;&#xA;Dim loginUrl As String = &quot;https://sso.starconnect.id/auth/realms/git/protocol/openid-connect/token&quot;&#xD;&#xA;&#xD;&#xA;Dim payload As New NameValueCollection()&#xD;&#xA;payload(&quot;grant_type&quot;) = &quot;password&quot;&#xD;&#xA;payload(&quot;client_id&quot;) = &quot;git-client&quot;&#xD;&#xA;payload(&quot;username&quot;) = &quot;scdemo223.admin&quot;&#xD;&#xA;payload(&quot;password&quot;) = &quot;ayxwittspp&quot;&#xD;&#xA;&#xD;&#xA;Dim client As New WebClient()&#xD;&#xA;&#xD;&#xA;Dim responseBytes As Byte() = client.UploadValues(loginUrl, &quot;POST&quot;, payload)&#xD;&#xA;Dim responseBody As String = Encoding.UTF8.GetString(responseBytes)&#xD;&#xA;&#xD;&#xA; ' Parse the responseBody to get the access_toke&#xD;&#xA;Dim jsonResponse As JObject = JObject.Parse(responseBody)&#xD;&#xA;Dim accessToken As String = jsonResponse(&quot;access_token&quot;).ToString()&#xD;&#xA;&#xD;&#xA;accessTokenArg = accessToken&#xD;&#xA;&#xD;&#xA;Dim profileUrl As String = &quot;https://ng-api-demo.gitsolutions.id/api/user/profile&quot;&#xD;&#xA;&#xD;&#xA;client.Headers(HttpRequestHeader.Authorization) = &quot;Bearer &quot; &amp; accessToken&#xD;&#xA;client.Headers.Add(&quot;x-tenantid&quot;, &quot;004416ec-37b0-49b4-9bf1-d26dde3b81a6&quot;)&#xD;&#xA;&#xD;&#xA;Try&#xD;&#xA;    Dim profileResponseBytes As Byte() = client.DownloadData(profileUrl)&#xD;&#xA;    Dim profileResponseBody As String = Encoding.UTF8.GetString(profileResponseBytes)&#xD;&#xA;&#xD;&#xA;    ' Parse the profileResponseBody to get the authoritiesToken&#xD;&#xA;    Dim profileJsonResponse As JObject = JObject.Parse(profileResponseBody)&#xD;&#xA;    Dim authoritiesToken As String = profileJsonResponse(&quot;authoritiesToken&quot;).ToString()&#xD;&#xA;&#xD;&#xA;    authoritiesTokenArg = authoritiesToken&#xD;&#xA;Catch ex As WebException&#xD;&#xA;    Dim errorResponse As String = New StreamReader(ex.Response.GetResponseStream()).ReadToEnd()&#xD;&#xA;    System.Console.WriteLine(&quot;Error: &quot; &amp; errorResponse)&#xD;&#xA;End Try" DisplayName="get tokens" sap:VirtualizedContainerService.HintSize="451.2,196.8" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
      <ui:InvokeCode.Arguments>
        <OutArgument x:TypeArguments="x:String" x:Key="accessTokenArg">
          <VisualBasicReference x:TypeArguments="x:String" ExpressionText="access_token_arg" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="authoritiesTokenArg">
          <VisualBasicReference x:TypeArguments="x:String" ExpressionText="profile_token_arg" />
        </OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="451.2,358.4" sap2010:WorkflowViewState.IdRef="CommentOut_3">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,248" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim accessToken As String &#xD;&#xA;Dim profileToken As String&#xD;&#xA;&#xD;&#xA;accessToken = accessTokenArg&#xD;&#xA;profileToken = profileTokenArg&#xD;&#xA;&#xD;&#xA;Dim url As String = &quot;https://ng-api-demo.gitsolutions.id/api/admin/tools/proccess-manager&quot;&#xD;&#xA;Dim today As DateTime = DateTime.Now&#xD;&#xA;Dim effectiveDate As String = today.ToString(&quot;yyyy-MM-dd&quot;)&#xD;&#xA;Dim description As String = today.ToString(&quot;dd-MMM-yyyy&quot;)&#xD;&#xA;Dim payload As New Dictionary(Of String, Object) From {&#xD;&#xA;    {&quot;processName&quot;,  &quot;RPT_ASSIGNMENT&quot;},&#xD;&#xA;    {&quot;isProcessManager&quot;, True},&#xD;&#xA;    {&quot;param&quot;, New List(Of Dictionary(Of String, Object)) From {&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;locationGroupId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Location Group&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;companyId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Company&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;organizationLevelId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Organization Level&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;organizationId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Organization&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;jobFamilyId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Job Family&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;jobId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Job&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;locationId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Location&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;positionLevelId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Position Level&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;employmentId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Employee&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;userGroup&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;User&quot;}, {&quot;description&quot;, Nothing}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;managerEmploymentId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Manager&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;effectiveDate&quot;}, {&quot;value&quot;, effectiveDate}, {&quot;label&quot;, &quot;As Of Date&quot;}, {&quot;description&quot;, description}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;terminationPeriod&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Termination Period&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;hirePeriod&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Hire Period&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;active&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Active&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}}&#xD;&#xA;    }}&#xD;&#xA;}&#xD;&#xA;Dim payloadJson As String = JsonConvert.SerializeObject(payload)&#xD;&#xA;Dim payloadBytes As Byte() = Encoding.UTF8.GetBytes(payloadJson)&#xD;&#xA;Dim request As HttpWebRequest = CType(WebRequest.Create(url), HttpWebRequest)&#xD;&#xA;request.Method = &quot;POST&quot;&#xD;&#xA;request.ContentType = &quot;application/json&quot;&#xD;&#xA;request.Headers(&quot;Authorization&quot;) = &quot;Bearer &quot; &amp; accessToken&#xD;&#xA;request.Headers(&quot;authorizationtoken&quot;) = profileToken&#xD;&#xA;request.Headers(&quot;x-tenantid&quot;) = &quot;004416ec-37b0-49b4-9bf1-d26dde3b81a6&quot;&#xD;&#xA;Using requestStream As Stream = request.GetRequestStream()&#xD;&#xA;    requestStream.Write(payloadBytes, 0, payloadBytes.Length)&#xD;&#xA;End Using&#xD;&#xA;Try&#xD;&#xA;    Dim response As HttpWebResponse = CType(request.GetResponse(), HttpWebResponse)&#xD;&#xA;    Using responseStream As Stream = response.GetResponseStream()&#xD;&#xA;        Using reader As New StreamReader(responseStream)&#xD;&#xA;            Dim responseBody As String = reader.ReadToEnd()&#xD;&#xA;            Dim result As Dictionary(Of String, Object) = JsonConvert.DeserializeObject(Of Dictionary(Of String, Object))(responseBody)&#xD;&#xA;            If result.ContainsKey(&quot;message&quot;) Then&#xD;&#xA;                Dim message As String = result(&quot;message&quot;).ToString()&#xD;&#xA;               &#x9;System.Console.WriteLine(&quot;Message: &quot; &amp; message)&#xD;&#xA;            Else&#xD;&#xA;                System.Console.WriteLine(&quot;Unexpected response format&quot;)&#xD;&#xA;            End If&#xD;&#xA;        End Using&#xD;&#xA;    End Using&#xD;&#xA;Catch ex As WebException&#xD;&#xA;    Using errorResponse As HttpWebResponse = CType(ex.Response, HttpWebResponse)&#xD;&#xA;        Using errorStream As Stream = errorResponse.GetResponseStream()&#xD;&#xA;            Using reader As New StreamReader(errorStream)&#xD;&#xA;                Dim errorBody As String = reader.ReadToEnd()&#xD;&#xA;                System.Console.WriteLine(&quot;Error: &quot; &amp; errorBody)&#xD;&#xA;            End Using&#xD;&#xA;        End Using&#xD;&#xA;    End Using&#xD;&#xA;End Try" DisplayName="post assignment report" sap:VirtualizedContainerService.HintSize="382.4,188" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="accessTokenArg">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="access_token_arg" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="profileTokenArg">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="profile_token_arg" />
              </InArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="451.2,358.4" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,248" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim accessToken As String &#xD;&#xA;Dim profileToken As String&#xD;&#xA;&#xD;&#xA;accessToken = accessTokenArg&#xD;&#xA;profileToken = profileTokenArg&#xD;&#xA;&#xD;&#xA;Dim url As String = &quot;https://ng-api-demo.gitsolutions.id/api/admin/tools/proccess-manager&quot;&#xD;&#xA;Dim today As DateTime = DateTime.Now&#xD;&#xA;Dim effectiveDate As String = today.ToString(&quot;yyyy-MM-dd&quot;)&#xD;&#xA;Dim description As String = today.ToString(&quot;dd-MMM-yyyy&quot;)&#xD;&#xA;Dim payload As New Dictionary(Of String, Object) From {&#xD;&#xA;    {&quot;processName&quot;,  &quot;RPT_BIODATA&quot;},&#xD;&#xA;    {&quot;isProcessManager&quot;, True},&#xD;&#xA;    {&quot;param&quot;, New List(Of Dictionary(Of String, Object)) From {&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;locationGroupId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Location Group&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;companyId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Company&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;organizationLevelId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Organization Level&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;organizationId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Organization&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;jobFamilyId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Job Family&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;jobId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Job&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;locationId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Location&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;positionLevelId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Position Level&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;employmentId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Employee&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;userGroup&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;User&quot;}, {&quot;description&quot;, Nothing}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;managerEmploymentId&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Manager&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;effectiveDate&quot;}, {&quot;value&quot;, effectiveDate}, {&quot;label&quot;, &quot;As Of Date&quot;}, {&quot;description&quot;, description}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;terminationPeriod&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Termination Period&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;hirePeriod&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Hire Period&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}},&#xD;&#xA;        New Dictionary(Of String, Object) From {{&quot;name&quot;, &quot;active&quot;}, {&quot;value&quot;, Nothing}, {&quot;label&quot;, &quot;Active&quot;}, {&quot;description&quot;, Nothing}, {&quot;visible&quot;, True}}&#xD;&#xA;    }}&#xD;&#xA;}&#xD;&#xA;Dim payloadJson As String = JsonConvert.SerializeObject(payload)&#xD;&#xA;Dim payloadBytes As Byte() = Encoding.UTF8.GetBytes(payloadJson)&#xD;&#xA;Dim request As HttpWebRequest = CType(WebRequest.Create(url), HttpWebRequest)&#xD;&#xA;request.Method = &quot;POST&quot;&#xD;&#xA;request.ContentType = &quot;application/json&quot;&#xD;&#xA;request.Headers(&quot;Authorization&quot;) = &quot;Bearer &quot; &amp; accessToken&#xD;&#xA;request.Headers(&quot;authorizationtoken&quot;) = profileToken&#xD;&#xA;request.Headers(&quot;x-tenantid&quot;) = &quot;004416ec-37b0-49b4-9bf1-d26dde3b81a6&quot;&#xD;&#xA;Using requestStream As Stream = request.GetRequestStream()&#xD;&#xA;    requestStream.Write(payloadBytes, 0, payloadBytes.Length)&#xD;&#xA;End Using&#xD;&#xA;Try&#xD;&#xA;    Dim response As HttpWebResponse = CType(request.GetResponse(), HttpWebResponse)&#xD;&#xA;    Using responseStream As Stream = response.GetResponseStream()&#xD;&#xA;        Using reader As New StreamReader(responseStream)&#xD;&#xA;            Dim responseBody As String = reader.ReadToEnd()&#xD;&#xA;            Dim result As Dictionary(Of String, Object) = JsonConvert.DeserializeObject(Of Dictionary(Of String, Object))(responseBody)&#xD;&#xA;            If result.ContainsKey(&quot;message&quot;) Then&#xD;&#xA;                Dim message As String = result(&quot;message&quot;).ToString()&#xD;&#xA;               &#x9;System.Console.WriteLine(&quot;Message: &quot; &amp; message)&#xD;&#xA;            Else&#xD;&#xA;                System.Console.WriteLine(&quot;Unexpected response format&quot;)&#xD;&#xA;            End If&#xD;&#xA;        End Using&#xD;&#xA;    End Using&#xD;&#xA;Catch ex As WebException&#xD;&#xA;    Using errorResponse As HttpWebResponse = CType(ex.Response, HttpWebResponse)&#xD;&#xA;        Using errorStream As Stream = errorResponse.GetResponseStream()&#xD;&#xA;            Using reader As New StreamReader(errorStream)&#xD;&#xA;                Dim errorBody As String = reader.ReadToEnd()&#xD;&#xA;                System.Console.WriteLine(&quot;Error: &quot; &amp; errorBody)&#xD;&#xA;            End Using&#xD;&#xA;        End Using&#xD;&#xA;    End Using&#xD;&#xA;End Try" DisplayName="post biodata report" sap:VirtualizedContainerService.HintSize="382.4,188" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="accessTokenArg">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="access_token_arg" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="profileTokenArg">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="profile_token_arg" />
              </InArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim accessToken As String = accessTokenArg&#xD;&#xA;Dim profileToken As String = profileTokenArg&#xD;&#xA;Dim biodataReportUrl As String = &quot;&quot;&#xD;&#xA;Dim assignmentReportUrl As String = &quot;&quot;&#xD;&#xA;&#xD;&#xA;Dim url As String = &quot;https://ng-api-demo.gitsolutions.id/api/admin/tools/proccess-manager?isProcessManager=true&amp;page=0&amp;size=10&quot;&#xD;&#xA;Dim client As New WebClient()&#xD;&#xA;&#xD;&#xA;Do&#xD;&#xA;    client.Headers(HttpRequestHeader.Authorization) = &quot;Bearer &quot; &amp; accessToken&#xD;&#xA;    client.Headers.Add(&quot;authorizationtoken&quot;, profileToken)&#xD;&#xA;    client.Headers.Add(&quot;x-tenantid&quot;, &quot;004416ec-37b0-49b4-9bf1-d26dde3b81a6&quot;)&#xD;&#xA;&#xD;&#xA;    Try&#xD;&#xA;        Dim responseBytes As Byte() = client.DownloadData(url)&#xD;&#xA;        If responseBytes Is Nothing OrElse responseBytes.Length = 0 Then&#xD;&#xA;            System.Console.WriteLine(&quot;Empty response bytes&quot;)&#xD;&#xA;            Exit Do&#xD;&#xA;        End If&#xD;&#xA;&#xD;&#xA;        Dim responseBody As String = Encoding.UTF8.GetString(responseBytes)&#xD;&#xA;        System.Console.WriteLine(&quot;Response: &quot; &amp; responseBody)&#xD;&#xA;&#xD;&#xA;        If String.IsNullOrEmpty(responseBody) Then&#xD;&#xA;            System.Console.WriteLine(&quot;Empty response body&quot;)&#xD;&#xA;            Exit Do&#xD;&#xA;        End If&#xD;&#xA;&#xD;&#xA;        Dim result As JObject = JObject.Parse(responseBody)&#xD;&#xA;        Dim data As JArray = TryCast(result(&quot;data&quot;), JArray)&#xD;&#xA;&#xD;&#xA;        If data Is Nothing Then&#xD;&#xA;            System.Console.WriteLine(&quot;Unexpected response format&quot;)&#xD;&#xA;            Exit Do&#xD;&#xA;        End If&#xD;&#xA;&#xD;&#xA;        ' Get upper biodata report url&#xD;&#xA;        For Each item As JObject In data&#xD;&#xA;            Dim name As String = item(&quot;name&quot;).ToString()&#xD;&#xA;            Dim status As String = item(&quot;status&quot;).ToString()&#xD;&#xA;            Dim reportUrl As String = If(item(&quot;reportUrl&quot;) IsNot Nothing, item(&quot;reportUrl&quot;).ToString(), &quot;&quot;)&#xD;&#xA;&#xD;&#xA;            If status &lt;&gt; &quot;Completed&quot; AndAlso name = &quot;Biodata Report&quot; Then&#xD;&#xA;                biodataReportUrl = &quot;&quot;&#xD;&#xA;                Exit For&#xD;&#xA;            ElseIf name = &quot;Biodata Report&quot; Then&#xD;&#xA;                biodataReportUrl = reportUrl&#xD;&#xA;                Exit For&#xD;&#xA;            End If&#xD;&#xA;        Next&#xD;&#xA;&#xD;&#xA;        ' Get upper assignment report url&#xD;&#xA;        For Each item As JObject In data&#xD;&#xA;            Dim name As String = item(&quot;name&quot;).ToString()&#xD;&#xA;            Dim status As String = item(&quot;status&quot;).ToString()&#xD;&#xA;            Dim reportUrl As String = If(item(&quot;reportUrl&quot;) IsNot Nothing, item(&quot;reportUrl&quot;).ToString(), &quot;&quot;)&#xD;&#xA;&#xD;&#xA;            If status &lt;&gt; &quot;Completed&quot; AndAlso name = &quot;Assignment Report&quot; Then&#xD;&#xA;                assignmentReportUrl = &quot;&quot;&#xD;&#xA;                Exit For&#xD;&#xA;            ElseIf name = &quot;Assignment Report&quot; Then&#xD;&#xA;                assignmentReportUrl = reportUrl&#xD;&#xA;                Exit For&#xD;&#xA;            End If&#xD;&#xA;        Next&#xD;&#xA;&#xD;&#xA;        If biodataReportUrl &lt;&gt; &quot;&quot; AndAlso assignmentReportUrl &lt;&gt; &quot;&quot; Then&#xD;&#xA;            System.Console.WriteLine(&quot;Biodata Report URL: &quot; &amp; biodataReportUrl)&#xD;&#xA;            System.Console.WriteLine(&quot;Assignment Report URL: &quot; &amp; assignmentReportUrl)&#xD;&#xA;            Exit Do&#xD;&#xA;        End If&#xD;&#xA;&#xD;&#xA;    Catch ex As WebException&#xD;&#xA;        Dim errorResponse As String = New StreamReader(ex.Response.GetResponseStream()).ReadToEnd()&#xD;&#xA;        System.Console.WriteLine(&quot;Error: &quot; &amp; errorResponse)&#xD;&#xA;        Exit Do&#xD;&#xA;    Catch ex As Exception&#xD;&#xA;        System.Console.WriteLine(&quot;Unexpected error: &quot; &amp; ex.Message)&#xD;&#xA;        Exit Do&#xD;&#xA;    End Try&#xD;&#xA;&#xD;&#xA;    Thread.Sleep(100)&#xD;&#xA;Loop&#xD;&#xA;&#xD;&#xA;assignmentReportUrlArg = assignmentReportUrl&#xD;&#xA;biodataReportUrlArg = biodataReportUrl" DisplayName="get report url" sap:VirtualizedContainerService.HintSize="451.2,196.8" sap2010:WorkflowViewState.IdRef="InvokeCode_7">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="accessTokenArg">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="access_token_arg" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="profileTokenArg">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="profile_token_arg" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="biodataReportUrlArg">
          <VisualBasicReference x:TypeArguments="x:String" ExpressionText="biodata_report_url_arg" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="assignmentReportUrlArg">
          <VisualBasicReference x:TypeArguments="x:String" ExpressionText="assignment_report_url_arg" />
        </OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:30" Buttons="Ok" Caption="Message" DisplayName="message pop up" sap:VirtualizedContainerService.HintSize="451.2,117.6" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[assignment_report_url_arg]" TopMost="True" />
    <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:30" Buttons="Ok" Caption="Message" DisplayName="message pop up" sap:VirtualizedContainerService.HintSize="451.2,117.6" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[biodata_report_url_arg]" TopMost="True" />
    <uasf:DownloadFileFromUrl Timeout="{x:Null}" ConflictResolution="Rename" DisplayName="Download assignment report" FileName="[Path.GetFileName(biodata_report_url_arg)]" sap:VirtualizedContainerService.HintSize="451.2,122.4" sap2010:WorkflowViewState.IdRef="DownloadFileFromUrl_1" ResponseAttachment="[downloadedFile]" Result="[Result]" Url="[assignment_report_url_arg]" />
    <uasf:DownloadFileFromUrl FileName="{x:Null}" ResponseAttachment="{x:Null}" Timeout="{x:Null}" ConflictResolution="Rename" DisplayName="Download biodata report" sap:VirtualizedContainerService.HintSize="451.2,113.6" sap2010:WorkflowViewState.IdRef="DownloadFileFromUrl_2" Url="[biodata_report_url_arg]" />
  </Sequence>
</Activity>